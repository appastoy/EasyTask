name: .NET Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  publish:
    name: build, pack & publish
    runs-on: ubuntu-latest
    environment: NUGET_API_KEY
    env:
      PROJECT_PATH: EasyTask/EasyTask.csproj
      NUGET_PUSH_KEY: ${{ secrets.NUGET_API_KEY }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: Restore project
      run: dotnet restore $PROJECT_PATH
            
    - name: Build project
      run: dotnet publish $PROJECT_PATH --no-restore -c Release
      
    - name: Bump version
      id: bump-version
      run: |
        git pull --tags
        PROJECT_VERSION=$(grep -oP "(?<=<Version>)[^<]+" $PROJECT_PATH) && echo PROJECT_VERSION: $PROJECT_VERSION
        LATEST_PATCH=$(git tag | grep "$PROJECT_VERSION" | sort -V | tail -1 | grep -oP "\d+$") || echo LATEST_PATCH: $LATEST_PATCH
        if [ -z "$LATEST_PATCH" ]
        then
          PACKAGE_VERSION="$PROJECT_VERSION.0"
        else
          PACKAGE_VERSION="$PROJECT_VERSION.$(( LATEST_PATCH + 1 ))"
        fi
        echo PACKAGE_VERSION: $PACKAGE_VERSION
        echo "::set-output name=PACKAGE_VERSION::$PACKAGE_VERSION"
        sed -i "s+<Version>$PROJECT_VERSION</Version>+<Version>$PACKAGE_VERSION</Version>+g" $PROJECT_PATH
      
    - name: Pack package
      run: |
        dotnet pack $PROJECT_PATH \
          --no-build \
          -c Release \
          --include-symbols \
          -property:SymbolPackageFormat=snupkg \
          --output .
    
    - name: Push to nuget gallary
      run: |
        dotnet nuget push *.nupkg \
          --source https://api.nuget.org/v3/index.json \
          --api-key $NUGET_PUSH_KEY \
          --skip-duplicate
          
    - name: Tagging version to git
      run: |
        TAG_NAME="v${{ steps.bump-version.outputs.PACKAGE_VERSION }}"
        git tag $TAG_NAME
        git push origin $TAG_NAME
